<?php

namespace App\Jobs;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldBeUnique;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use App\Events\betevent;
use App\Models\Event;
use App\Models\User;
use Auth;

class insertbet implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;
    public $finalamount;
    public $startingfight;
    public $id;
    public $user;
    /**
     * Create a new job instance.
     *
     * @return void
     */
    public function __construct($finalamount,$startingfight,$id,$user)
    {
      $this->finalamount = $finalamount;
      $this->startingfight = $startingfight;
      $this->id = $id;
      $this->user = $user;
    }

    /**
     * Execute the job.
     *
     * @return void
     */
    public function handle()
    {
        $amount = $this->finalamount;
        $starting = $this->startingfight;
        $idd = $this->id;
        $user = $this->user ;
        $check = Event::where('id',$idd)->first();
        if ($check->pick==20) {
          event(new betevent($amount,$starting,$idd));
        }else {
          broadcast(new betevent($amount,$starting,$idd,$user))->toOthers();
        }
    }
}
